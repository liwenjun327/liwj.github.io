<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github访问失败解决</title>
      <link href="2021/03/29/github-solves-the-wall/"/>
      <url>2021/03/29/github-solves-the-wall/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>国内大部分地区访问github.com及gitHub Pages相关个人博客出现访问失败，经查验在解析getHub相关域名会被指向到127.0.0.1上去。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul><li><p>方案一<br>修改电脑路径C:\windows\system32\drivers\etc下面的hosts文件<br><img src="/images/github-solves-the-wall-1.jpg" alt="hosts配置"><br>修改完成后cmd命令窗口执行下”ipconfig /flushdns”即可。</p></li><li><p>方案二（推荐使用）<br>相比较方案一不需要频繁修改hosts文件指定域名解析ip，只需修改本地DNS服务器地址，下面我修改成阿里的。<br>更改网络适配器<br><img src="/images/github-solves-the-wall-2.png" alt="更改网络适配器"></p></li></ul><p>找到需要修改的网络鼠标右键属性并在列表中找到Internet协议双击<br><img src="/images/github-solves-the-wall-3.jpg" width="50%"></p><p>修改DNS服务器地址<br><img src="/images/github-solves-the-wall-4.jpg" alt="修改DNS服务器地址"></p><p>以上两种均可，推荐使用方案二。</p>]]></content>
      
      
      <categories>
          
          <category> 经验分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经验分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据爬虫实战（1）</title>
      <link href="2021/03/27/htmlunit2/"/>
      <url>2021/03/27/htmlunit2/</url>
      
        <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>上章介绍了常用的爬虫技术，本章以HtmlUnit为主要爬取技术手段开始讲解实战中如何运用，有不懂之处可邮箱询问。</p><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>添加Htmlunit相关jar包，<a href="https://mvnrepository.com/artifact/net.sourceforge.htmlunit/htmlunit">Maven地址</a>  ，<a href="https://sourceforge.net/projects/htmlunit/files/htmlunit/">jar包下载地址</a>,注意2.43版本开始需要jdk8+支持。</p><h2 id="HtmlUnit入门"><a href="#HtmlUnit入门" class="headerlink" title="HtmlUnit入门"></a>HtmlUnit入门</h2><p>数据抓取面临的就是如何获取到想要的内容，这里可以是网页内容也可以是某个请求返回的内容，先看一个简单抓取HtmlUnit官网页面内容例子:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">final WebClient webClient=new WebClient();final HtmlPage page=webClient.getPage("http://htmlunit.sourceforge.net");System.out.println(page.asText());webClient.closeAllWindows();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>只要4行代码就可以获取HtmlUnit官网页面内容，是不是很简单，但请不要这么觉得，分析一下，上述例子抓取目标是公开的静态页面，但要是遇到需身份认证后才可访问的页面或页面内容是js生成的要如何处理了，不要着急，后续会逐一讲解。</p><p>上章节说到HtmlUnit可以模仿常规浏览器，这里我将之拆分为三块，浏览器客户端（WebClient）、浏览器窗口（WebWindow）、页面（Page），即使用WebClient创建浏览器，通过webClient.getPage()打开浏览器窗口及获取页面，首先我们先明白之间关系。</p><ul><li><strong>WebClient</strong><br>Web客户端实例，起始点，此类线程不安全，常用构造函数WebClient(BrowserVersion browserVersion)，指定浏览器创建客户端，详细请查阅<a href="https://htmlunit.sourceforge.io/apidocs/com/gargoylesoftware/htmlunit/WebClient.html">API</a> ，此类提供了浏览器客户端的相关配置，如是否支持cookie、是否执行JavaScript等，下面放上我的WebClient配置供参考<pre class="line-numbers language-none"><code class="language-none">private void init(BrowserVersion browserVersion){this.browser = new WebClient(browserVersion);if(this.webSiteId != null &amp;&amp; this.webSiteId.intValue() != 0L){//有指定站点的共用一个CookieManagerthis.browser.setCookieManager(CookieManagerHolder.getCookieManager(webSiteId));}browser.getOptions().setCssEnabled(false);browser.getOptions().setTimeout(10*60*1000);browser.getOptions().setJavaScriptEnabled(true);browser.getCookieManager().setCookiesEnabled(true);//支持cookiebrowser.getOptions().setThrowExceptionOnScriptError(false);  //解析js出错时不抛异常browser.getOptions().setThrowExceptionOnFailingStatusCode(false);browser.getOptions().setUseInsecureSSL(true); browser.getCache().setMaxSize(100);//默认好像是40，这里批缓存文件//页面alter弹出框只打印日志browser.setAlertHandler(new AlertHandler() {//private static final long serialVersionUID = -4252009088789246842L;@Overridepublic void handleAlert(com.gargoylesoftware.htmlunit.Page page, String message) {logger.info(page.toString()+"{},alert:{}", page.getUrl(), message);}});//确认框处理器,默认点击"确认",若有不同的作法请调用registerConfirmHandler设置browser.setConfirmHandler(new GobalConfirmHandler());//设置附件下载处理器browser.setAttachmentHandler(new GobalAttachmentHandler(this));browser.setAjaxController(new NicelyResynchronizingAjaxController(){private static final long serialVersionUID = -360189032618131935L;@Overridepublic boolean processSynchron(HtmlPage page, com.gargoylesoftware.htmlunit.WebRequest settings,boolean async) {logger.info("ajax request url:{}", settings.getUrl());logger.info("ajax{},请求Body:{}",settings.getUrl(),settings.getRequestBody());List&lt;NameValuePair&gt; params = settings.getRequestParameters();if(params != null &amp;&amp; !params.isEmpty()){logger.info("ajax request parameters is ....begin...");for(NameValuePair p : params){logger.info("{}={}", p.getName(), p.getValue());}logger.info("ajax request parameters is ....end...");}else{logger.info("ajax request url:{} not parameters", settings.getUrl());}return super.processSynchron(page, settings, async);}});browser.addWebWindowListener(new WebWindowListener() {@Overridepublic void webWindowOpened(WebWindowEvent event) {logger.info("浏览器:{},打开了窗口:{},URL:{},其TopWindow为:{},总共开启了窗口数:{}",getName(),event.getWebWindow().getName(),event.getWebWindow().getEnclosedPage() != null ? event.getWebWindow().getEnclosedPage().getUrl():"",(event.getWebWindow().getTopWindow() == null ? "无":event.getWebWindow().getTopWindow().getName()),browser.getWebWindows().size());}@Overridepublic void webWindowContentChanged(WebWindowEvent event) {logger.info("浏览器:{},修改了窗口:{},URL:{},其TopWindow为:{},总共开启了窗口数:{}",getName(),event.getWebWindow().getName(),event.getWebWindow().getEnclosedPage() != null ? event.getWebWindow().getEnclosedPage().getUrl():"",(event.getWebWindow().getTopWindow() == null ? "无":event.getWebWindow().getTopWindow().getName()),browser.getWebWindows().size());}@Overridepublic void webWindowClosed(WebWindowEvent event) {logger.info("浏览器:{},关闭了窗口:{},URL:{},其TopWindow为:{},总共开启了窗口数:{}",getName(),event.getWebWindow().getName(),event.getWebWindow().getEnclosedPage() != null ? event.getWebWindow().getEnclosedPage().getUrl():"",(event.getWebWindow().getTopWindow() == null ? "无":event.getWebWindow().getTopWindow().getName()),browser.getWebWindows().size());}});HttpWebConnection conn = new HttpWebConnection(browser){@Overridepublic com.gargoylesoftware.htmlunit.WebResponse getResponse(com.gargoylesoftware.htmlunit.WebRequest request) throws IOException {com.gargoylesoftware.htmlunit.WebResponse response = super.getResponse(request);logger.info("htmlunit{}请求{},Request Method:{},Response Code:{}",(isAjaxRequest(request)?" ajax":""),request.getUrl(),request.getHttpMethod(), response.getStatusCode());if(Configuration.isRequestLogParams()){logRequestParams(request);}if(Configuration.isRequestLogHeaders()){logRequestHeaders(request);}if(Configuration.isRequestLogCookies()){logRequestCookies(request);}if(!patternRespHandlers.isEmpty()){String path = request.getUrl().getPath();for(Map.Entry&lt;String, RegexPathResponseHandler&gt; e : patternRespHandlers.entrySet()){if(path.matches(e.getKey())){e.getValue().handle(request, response);}}}return response;}protected boolean isAjaxRequest(com.gargoylesoftware.htmlunit.WebRequest request){if(request.getAdditionalHeaders() == null || request.getAdditionalHeaders().isEmpty())return false;return "XMLHttpRequest".equalsIgnoreCase(request.getAdditionalHeaders().get("X-Requested-With"));}protected void logRequestParams(com.gargoylesoftware.htmlunit.WebRequest request){logger.info("请求:{},请求Body:", request.getUrl(), (request.getRequestBody() == null ? "" : request.getRequestBody()));List&lt;NameValuePair&gt; params = request.getRequestParameters();if(params != null &amp;&amp; !params.isEmpty()){logger.info("请求:{},请求参数如下:",request.getUrl());for(NameValuePair p : params){logger.info(p.getName()+"="+p.getValue());}}else{logger.info("请求:{},请求参数:无", request.getUrl());}}protected void logRequestHeaders(com.gargoylesoftware.htmlunit.WebRequest request){Map&lt;String,String&gt; headers = request.getAdditionalHeaders();if(headers != null &amp;&amp; !headers.isEmpty()){logger.info("请求:{},请求头如下:",request.getUrl());for(Map.Entry&lt;String, String&gt; h : headers.entrySet()){logger.info(h.getKey()+"="+h.getValue());}}else{logger.info("请求:{},请求头:无",request.getUrl());}}protected void logRequestCookies(com.gargoylesoftware.htmlunit.WebRequest request){if(browser.getCookieManager() == null){return;}Set&lt;com.gargoylesoftware.htmlunit.util.Cookie&gt; cookies = browser.getCookieManager().getCookies();if(cookies != null &amp;&amp; !cookies.isEmpty()){logger.info("请求:{},Cookies如下:",request.getUrl());for(com.gargoylesoftware.htmlunit.util.Cookie ck : cookies){logger.info(ck.toString());}}else{logger.info("请求:{},Cookies:无",request.getUrl());}}};browser.setWebConnection(conn);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><strong>HtmlPage</strong><br>HTML页面的表示形式对象，通过WebClient.getPage方法获取，这个类提供了不同的方法来访问页面的内容，</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HtmlUnit </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络数据爬虫简介</title>
      <link href="2021/03/25/htmlunit1/"/>
      <url>2021/03/25/htmlunit1/</url>
      
        <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>最近工作上都忙于采集各系统的数据，所以也是在数据爬虫方面进行了学习，今天也是抽空出来记录下。</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><strong>爬虫（程序）</strong>、<strong>自动化</strong>、<strong>抓取数据</strong>。<br>通俗的讲就是利用程序自动化获取想要的数据进行存储。</p><h2 id="相关技术"><a href="#相关技术" class="headerlink" title="相关技术"></a>相关技术</h2><p>现在比较常见的有Jsoup、HtmlUnit、Httpclient等，以下简单介绍下。</p><ul><li><p>Jsoup<br>jsoup是一个用于处理真实HTML的Java库。它提供了一个非常方便的API，用于提取和操作数据，使用最好的DOM，CSS和类似jquery的方法。<br>优点：轻量级框架，静态页面Dom解析异常简单,操作也是时候简单，知道Jquery的使用基本就能快速上手。<br>缺点：只能解析静态网页，无法支持页面js。</p></li><li><p>HtmlUnit（强烈推荐）<br>HtmlUnit是一款java的无界面浏览器程序库，它为HTML文档建模，并提供一个API，使您可以调用页面，填写表单，单击链接等，就像在“常规”浏览器中一样。<br>它具有相当不错的JavaScript支持（正在不断改进），并且甚至可以与非常复杂的AJAX库一起工作，根据所使用的配置来模拟Chrome，Firefox或Internet Explorer。<br>优点：能执行JavaScript、AJAX解析，模仿点击页面操作完成一系列指令。<br>缺点：选择器有点难用，JavaScript容易报错。</p></li><li><p>Httpclient<br>HttpClient是Apache Jakarta Common下的子项目，用来提供高效的、最新的、功能丰富的支持HTTP协议的客户端编程工具包。<br>在爬虫方面简单粗暴的直接利用url，各种请求获取数据，上面介绍的两种方式也是对Httpclient进行了封装。<br>优点：简单粗暴，直接通过http形式获取数据<br>缺点：没有解析页面，在面对cookie认证的请求时需先获取到认证cookie，无法像htmlunit模拟执行页面操作（htmlunit模仿登录操作，登录成功后会保存认证的cookie、session等）。</p></li></ul><p>以上几种各有优缺点，推荐一起使用，Htmlunit&gt;Jsoup&gt;Httpclient。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>本章暂介绍博主工作上用到的相关爬虫，若有更好的也请各位指教，后续章节会讲解博主在实战中是如何使用的及一些小技巧。<br>注：后续相关爬虫技术均采用的Java语言，至于前些年大火的Python爬虫就不介绍。</p>]]></content>
      
      
      <categories>
          
          <category> 数据爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HtmlUnit </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新的一年新的开始</title>
      <link href="2021/03/15/one-title/"/>
      <url>2021/03/15/one-title/</url>
      
        <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><p>这算是第一篇博客吧，之前都是把学习上、工作上的问题记录在有道云笔记上，没有想过分享出来，现准备以博客的形式记录。</p><h2 id="2021年新的开始"><a href="#2021年新的开始" class="headerlink" title="2021年新的开始"></a>2021年新的开始</h2><p>2018年11月13日入职了第一家公司，做的是智慧工地web及APP，刚入职场秉着积极向上的心态认真工作，不到半年就迎来了加薪，本以为发展前景一片大好，随之而来的是高层的分歧，导致入职时谈好的半年一加薪及各项福利没有落实下来，初入职场的我也是想着多干些日子积累经验及技术。</p><p>好景不长，2020年的新冠疫情的爆发，导致公司高层分歧加剧，2020年3月5日公司开会（3月1日返的工），公司开发部大部分需转型到前线去接触业务，就是变相裁员，被逼无奈只能离职重新找工作，同批离职的有7个人，也就是这段时期让我认知到了个人能力的重要，离职后的两个星期，我和一同事相继收到了offer，期间的苦可能只有经历了疫情期间找工作的才知道吧，其它几名同事面试机会寥寥无几及疫情期间招工要求普遍提高，后也是相继回了老家或继续艰辛求职。</p><p>直到今日入职第二家公司也要一年了，抽了些时间搭了个人博客准备记录日常，新的一年新的开始。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><ul><li>在好的平台也不是自己的，学到的才是自己的。</li><li>想到了什么事情就立马做，不然过段时间可能就不了了之了。</li><li>改变不了以前就改变现在。</li><li>看技术时看个整体知道是干嘛的就行，<strong>动手非常重要</strong>，实践出真理。</li><li>想学一门技术时不要犹犹豫豫，不要考虑学了有没有用，学了就是自己的，遇到困难也不要气馁，解决了印象更深。</li></ul><p>暂时就说到这吧，在此送给各位一些话，也是给自己的。</p>]]></content>
      
      
      <categories>
          
          <category> 自我感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自省 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
